Using username "ec2-user".
Authenticating with public key "imported-openssh-key"

       __|  __|_  )
       _|  (     /   Amazon Linux AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-ami/2017.03-release-notes/
7 package(s) needed for security, out of 10 available
Run "sudo yum update" to apply all updates.
[ec2-user@ip-172-31-11-113 ~]$ sudo su
[root@ip-172-31-11-113 ec2-user]# wget https://packages.chef.io/files/stable/chefdk/1.4.3/el/7/chefdk-1.4.3-1.el7.x86_64.rpm
--2017-05-24 07:09:58--  https://packages.chef.io/files/stable/chefdk/1.4.3/el/7/chefdk-1.4.3-1.el7.x86_64.rpm
Resolving packages.chef.io (packages.chef.io)... 151.101.8.65
Connecting to packages.chef.io (packages.chef.io)|151.101.8.65|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 109537050 (104M) [application/x-rpm]
Saving to: ‘chefdk-1.4.3-1.el7.x86_64.rpm’

chefdk-1.4.3-1.el7.x86_64.rpm           100%[============================================================================>] 104.46M  11.0MB/s    in 10s

2017-05-24 07:10:09 (10.4 MB/s) - ‘chefdk-1.4.3-1.el7.x86_64.rpm’ saved [109537050/109537050]

[root@ip-172-31-11-113 ec2-user]# ls
chefdk-1.4.3-1.el7.x86_64.rpm
[root@ip-172-31-11-113 ec2-user]# rpm -ivh chefdk-1.4.3-1.el7.x86_64.rpm
warning: chefdk-1.4.3-1.el7.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
Preparing...                          ################################# [100%]
Updating / installing...
   1:chefdk-1.4.3-1.el7               ################################# [100%]
Thank you for installing Chef Development Kit!
[root@ip-172-31-11-113 ec2-user]# cv
bash: cv: command not found
[root@ip-172-31-11-113 ec2-user]# cd ..
[root@ip-172-31-11-113 home]# cd
[root@ip-172-31-11-113 ~]# mkdir chef-repo
[root@ip-172-31-11-113 ~]# cd chef-repo/
[root@ip-172-31-11-113 chef-repo]# mkdir .chef
[root@ip-172-31-11-113 chef-repo]# ls
chefp123-validator.pem  Chef.pem  knife.rb  praveeng.pem
[root@ip-172-31-11-113 chef-repo]# mv Chef.pem .chef
[root@ip-172-31-11-113 chef-repo]# mv praveeng.pem .chef
[root@ip-172-31-11-113 chef-repo]# mv knife.rb .chef/
[root@ip-172-31-11-113 chef-repo]# mv chefp123-validator.pem .chef
[root@ip-172-31-11-113 chef-repo]# knife generate cookbook httpd
FATAL: Cannot find subcommand for: 'generate cookbook httpd'
Available subcommands: (for details, knife SUB-COMMAND --help)

** OPSCODE PRIVATE CHEF ORGANIZATION MANAGEMENT COMMANDS **
knife opc org create ORG_SHORT_NAME ORG_FULL_NAME (options)
knife opc org delete ORG_NAME
knife opc org edit ORG
knife opc org list
knife opc org show ORGNAME
knife opc org user add ORG_NAME USER_NAME
knife opc org user remove ORG_NAME USER_NAME
knife opc user create USERNAME FIRST_NAME [MIDDLE_NAME] LAST_NAME EMAIL PASSWORD
knife opc user delete USERNAME [-d]
knife opc user edit USERNAME
knife opc user list
knife opc user password USERNAME [PASSWORD | --enable-external-auth]
knife opc user show USERNAME

** BOOTSTRAP COMMANDS **
knife bootstrap [SSH_USER@]FQDN (options)
knife bootstrap windows ssh FQDN (options)
knife bootstrap windows winrm FQDN (options)

** CLIENT COMMANDS **
knife client bulk delete REGEX (options)
knife client create CLIENTNAME (options)
knife client delete [CLIENT[,CLIENT]] (options)
knife client edit CLIENT (options)
Usage: /usr/bin/knife (options)
knife client key delete CLIENT KEYNAME (options)
knife client key edit CLIENT KEYNAME (options)
knife client key list CLIENT (options)
knife client key show CLIENT KEYNAME (options)
knife client list (options)
knife client reregister CLIENT (options)
knife client show CLIENT (options)

** CONFIGURE COMMANDS **
knife configure (options)
knife configure client DIRECTORY

** COOKBOOK COMMANDS **
knife cookbook bulk delete REGEX (options)
knife cookbook create COOKBOOK (options)
knife cookbook delete COOKBOOK VERSION (options)
knife cookbook download COOKBOOK [VERSION] (options)
knife cookbook list (options)
knife cookbook metadata COOKBOOK (options)
knife cookbook metadata from FILE (options)
knife cookbook show COOKBOOK [VERSION] [PART] [FILENAME] (options)
knife cookbook test [COOKBOOKS...] (options)
knife cookbook upload [COOKBOOKS...] (options)

** COOKBOOK SITE COMMANDS **
knife cookbook site download COOKBOOK [VERSION] (options)
knife cookbook site install COOKBOOK [VERSION] (options)
knife cookbook site list (options)
knife cookbook site search QUERY (options)
knife cookbook site share COOKBOOK [CATEGORY] (options)
knife cookbook site show COOKBOOK [VERSION] (options)
knife cookbook site unshare COOKBOOK

** DATA BAG COMMANDS **
knife data bag create BAG [ITEM] (options)
knife data bag delete BAG [ITEM] (options)
knife data bag edit BAG ITEM (options)
knife data bag from file BAG FILE|FOLDER [FILE|FOLDER..] (options)
knife data bag list (options)
knife data bag show BAG [ITEM] (options)

** DECRYPT COMMANDS **
knife decrypt VAULT ITEM [VALUES] (options)

** EC2 COMMANDS **
knife ec2 amis ubuntu DISTRO [TYPE] (options)

** ENCRYPT COMMANDS **
knife encrypt create VAULT ITEM VALUES (options)
knife encrypt delete VAULT ITEM (options)
knife encrypt remove VAULT ITEM VALUES (options)
knife encrypt rotate keys VAULT ITEM (options)
knife encrypt update VAULT ITEM VALUES (options)

** ENVIRONMENT COMMANDS **
knife environment compare [ENVIRONMENT..] (options)
knife environment create ENVIRONMENT (options)
knife environment delete ENVIRONMENT (options)
knife environment edit ENVIRONMENT (options)
knife environment from file FILE [FILE..] (options)
knife environment list (options)
knife environment show ENVIRONMENT (options)

** EXEC COMMANDS **
knife exec [SCRIPT] (options)

** HELP COMMANDS **
knife help [list|TOPIC]

** INDEX COMMANDS **
knife index rebuild (options)

** JOB COMMANDS **
knife job list
knife job output <job id> <node> [<node> ...]
knife job start <command> [<node> <node> ...]
knife job status <job id>

** KNIFE COMMANDS **
Usage: /usr/bin/knife (options)

** NODE COMMANDS **
knife node bulk delete REGEX (options)
knife node create NODE (options)
knife node delete [NODE[,NODE]] (options)
knife node edit NODE (options)
knife node environment set NODE ENVIRONMENT
knife node from file FILE (options)
knife node list (options)
knife node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife node run_list remove [NODE] [ENTRY[,ENTRY]] (options)
knife node run_list set NODE ENTRIES (options)
knife node show NODE (options)
knife node status [<node> <node> ...]

** NULL COMMANDS **
knife null

** OSC COMMANDS **
knife osc_user create USER (options)
knife osc_user delete USER (options)
knife osc_user edit USER (options)
knife osc_user list (options)
knife osc_user reregister USER (options)
knife osc_user show USER (options)

** PATH-BASED COMMANDS **
knife delete [PATTERN1 ... PATTERNn]
knife deps PATTERN1 [PATTERNn]
knife diff PATTERNS
knife download PATTERNS
knife edit [PATTERN1 ... PATTERNn]
knife list [-dfR1p] [PATTERN1 ... PATTERNn]
knife show [PATTERN1 ... PATTERNn]
knife upload PATTERNS
knife xargs [COMMAND]

** RAW COMMANDS **
knife raw REQUEST_PATH

** RECIPE COMMANDS **
knife recipe list [PATTERN]

** REHASH COMMANDS **
knife rehash

** ROLE COMMANDS **
knife role bulk delete REGEX (options)
knife role create ROLE (options)
knife role delete ROLE (options)
knife role edit ROLE (options)
knife role env_run_list add [ROLE] [ENVIRONMENT] [ENTRY[,ENTRY]] (options)
knife role env_run_list clear [ROLE] [ENVIRONMENT]
knife role env_run_list remove [ROLE] [ENVIRONMENT] [ENTRIES]
knife role env_run_list replace [ROLE] [ENVIRONMENT] [OLD_ENTRY] [NEW_ENTRY]
knife role env_run_list set [ROLE] [ENVIRONMENT] [ENTRIES]
knife role from file FILE [FILE..] (options)
knife role list (options)
knife role run_list add [ROLE] [ENTRY[,ENTRY]] (options)
knife role run_list clear [ROLE]
knife role run_list remove [ROLE] [ENTRY]
knife role run_list replace [ROLE] [OLD_ENTRY] [NEW_ENTRY]
knife role run_list set [ROLE] [ENTRIES]
knife role show ROLE (options)

** SEARCH COMMANDS **
knife search INDEX QUERY (options)

** SERVE COMMANDS **
knife serve (options)

** SPORK COMMANDS **
knife spork bump COOKBOOK [major|minor|patch|manual]
knife spork check COOKBOOK (options)
knife spork data bag create BAG [ITEM] (options)
knife spork data bag delete BAG [ITEM] (options)
knife spork data bag edit BAG ITEM (options)
knife spork data bag from file BAG FILE|FOLDER [FILE|FOLDER..] (options)
knife spork delete [COOKBOOKS...] (options)
knife spork environment check ENVIRONMENT (options)
knife spork environment create ENVIRONMENT (options)
knife spork environment delete ENVIRONMENT (options)
knife spork environment edit ENVIRONMENT (options)
knife spork environment from file FILENAME (options)
knife spork info
knife spork node create NODE (options)
knife spork node delete NODE (options)
knife spork node edit NODE (options)
knife spork node from file FILE (options)
knife spork node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife spork node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife spork node run_list set NODE ENTRIES (options)
knife spork omni COOKBOOK (options)
knife spork promote ENVIRONMENT COOKBOOK (options)
knife spork role create ROLE (options)
knife spork role delete ROLENAME (options)
knife spork role edit ROLENAME (options)
knife spork role from file FILENAME (options)
knife spork upload [COOKBOOKS...] (options)

** SSH COMMANDS **
knife ssh QUERY COMMAND (options)

** SSL COMMANDS **
knife ssl check [URL] (options)
knife ssl fetch [URL] (options)

** STATUS COMMANDS **
knife status QUERY (options)

** SUPERMARKET COMMANDS **
knife supermarket download COOKBOOK [VERSION] (options)
knife supermarket install COOKBOOK [VERSION] (options)
knife supermarket list (options)
knife supermarket search QUERY (options)
knife supermarket share COOKBOOK [CATEGORY] (options)
knife supermarket show COOKBOOK [VERSION] (options)
knife supermarket unshare COOKBOOK (options)

** TAG COMMANDS **
knife tag create NODE TAG ...
knife tag delete NODE TAG ...
knife tag list NODE

** USER COMMANDS **
knife user create USERNAME DISPLAY_NAME FIRST_NAME LAST_NAME EMAIL PASSWORD (options)
knife user delete USER (options)
knife user edit USER (options)
knife user key create USER (options)
knife user key delete USER KEYNAME (options)
knife user key edit USER KEYNAME (options)
knife user key list USER (options)
knife user key show USER KEYNAME (options)
knife user list (options)
knife user reregister USER (options)
knife user show USER (options)

** VAULT COMMANDS **
knife vault create VAULT ITEM VALUES (options)
knife vault decrypt VAULT ITEM [VALUES] (options)
knife vault delete VAULT ITEM (options)
knife vault download VAULT ITEM PATH (options)
knife vault edit VAULT ITEM (options)
knife vault isvault VAULT ITEM (options)
knife vault itemtype VAULT ITEM (options)
knife vault list (options)
knife vault refresh VAULT ITEM
knife vault remove VAULT ITEM VALUES (options)
knife vault rotate all keys
knife vault rotate keys VAULT ITEM (options)
knife vault show VAULT [ITEM] [VALUES] (options)
knife vault update VAULT ITEM VALUES (options)

** WINDOWS COMMANDS **
knife windows cert generate FILE_PATH (options)
knife windows cert install CERT [CERT] (options)
knife bootstrap windows winrm FQDN (options)
knife bootstrap windows ssh FQDN (options)
knife winrm QUERY COMMAND (options)
knife wsman test QUERY (options)
knife windows listener create (options)

** WINRM COMMANDS **
knife winrm QUERY COMMAND (options)

** WSMAN COMMANDS **
knife wsman test QUERY (options)

[root@ip-172-31-11-113 chef-repo]# ls
[root@ip-172-31-11-113 chef-repo]# knife generate cookbook appache
FATAL: Cannot find subcommand for: 'generate cookbook appache'
Available subcommands: (for details, knife SUB-COMMAND --help)

** OPSCODE PRIVATE CHEF ORGANIZATION MANAGEMENT COMMANDS **
knife opc org create ORG_SHORT_NAME ORG_FULL_NAME (options)
knife opc org delete ORG_NAME
knife opc org edit ORG
knife opc org list
knife opc org show ORGNAME
knife opc org user add ORG_NAME USER_NAME
knife opc org user remove ORG_NAME USER_NAME
knife opc user create USERNAME FIRST_NAME [MIDDLE_NAME] LAST_NAME EMAIL PASSWORD
knife opc user delete USERNAME [-d]
knife opc user edit USERNAME
knife opc user list
knife opc user password USERNAME [PASSWORD | --enable-external-auth]
knife opc user show USERNAME

** BOOTSTRAP COMMANDS **
knife bootstrap [SSH_USER@]FQDN (options)
knife bootstrap windows ssh FQDN (options)
knife bootstrap windows winrm FQDN (options)

** CLIENT COMMANDS **
knife client bulk delete REGEX (options)
knife client create CLIENTNAME (options)
knife client delete [CLIENT[,CLIENT]] (options)
knife client edit CLIENT (options)
Usage: /usr/bin/knife (options)
knife client key delete CLIENT KEYNAME (options)
knife client key edit CLIENT KEYNAME (options)
knife client key list CLIENT (options)
knife client key show CLIENT KEYNAME (options)
knife client list (options)
knife client reregister CLIENT (options)
knife client show CLIENT (options)

** CONFIGURE COMMANDS **
knife configure (options)
knife configure client DIRECTORY

** COOKBOOK COMMANDS **
knife cookbook bulk delete REGEX (options)
knife cookbook create COOKBOOK (options)
knife cookbook delete COOKBOOK VERSION (options)
knife cookbook download COOKBOOK [VERSION] (options)
knife cookbook list (options)
knife cookbook metadata COOKBOOK (options)
knife cookbook metadata from FILE (options)
knife cookbook show COOKBOOK [VERSION] [PART] [FILENAME] (options)
knife cookbook test [COOKBOOKS...] (options)
knife cookbook upload [COOKBOOKS...] (options)

** COOKBOOK SITE COMMANDS **
knife cookbook site download COOKBOOK [VERSION] (options)
knife cookbook site install COOKBOOK [VERSION] (options)
knife cookbook site list (options)
knife cookbook site search QUERY (options)
knife cookbook site share COOKBOOK [CATEGORY] (options)
knife cookbook site show COOKBOOK [VERSION] (options)
knife cookbook site unshare COOKBOOK

** DATA BAG COMMANDS **
knife data bag create BAG [ITEM] (options)
knife data bag delete BAG [ITEM] (options)
knife data bag edit BAG ITEM (options)
knife data bag from file BAG FILE|FOLDER [FILE|FOLDER..] (options)
knife data bag list (options)
knife data bag show BAG [ITEM] (options)

** DECRYPT COMMANDS **
knife decrypt VAULT ITEM [VALUES] (options)

** EC2 COMMANDS **
knife ec2 amis ubuntu DISTRO [TYPE] (options)

** ENCRYPT COMMANDS **
knife encrypt create VAULT ITEM VALUES (options)
knife encrypt delete VAULT ITEM (options)
knife encrypt remove VAULT ITEM VALUES (options)
knife encrypt rotate keys VAULT ITEM (options)
knife encrypt update VAULT ITEM VALUES (options)

** ENVIRONMENT COMMANDS **
knife environment compare [ENVIRONMENT..] (options)
knife environment create ENVIRONMENT (options)
knife environment delete ENVIRONMENT (options)
knife environment edit ENVIRONMENT (options)
knife environment from file FILE [FILE..] (options)
knife environment list (options)
knife environment show ENVIRONMENT (options)

** EXEC COMMANDS **
knife exec [SCRIPT] (options)

** HELP COMMANDS **
knife help [list|TOPIC]

** INDEX COMMANDS **
knife index rebuild (options)

** JOB COMMANDS **
knife job list
knife job output <job id> <node> [<node> ...]
knife job start <command> [<node> <node> ...]
knife job status <job id>

** KNIFE COMMANDS **
Usage: /usr/bin/knife (options)

** NODE COMMANDS **
knife node bulk delete REGEX (options)
knife node create NODE (options)
knife node delete [NODE[,NODE]] (options)
knife node edit NODE (options)
knife node environment set NODE ENVIRONMENT
knife node from file FILE (options)
knife node list (options)
knife node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife node run_list remove [NODE] [ENTRY[,ENTRY]] (options)
knife node run_list set NODE ENTRIES (options)
knife node show NODE (options)
knife node status [<node> <node> ...]

** NULL COMMANDS **
knife null

** OSC COMMANDS **
knife osc_user create USER (options)
knife osc_user delete USER (options)
knife osc_user edit USER (options)
knife osc_user list (options)
knife osc_user reregister USER (options)
knife osc_user show USER (options)

** PATH-BASED COMMANDS **
knife delete [PATTERN1 ... PATTERNn]
knife deps PATTERN1 [PATTERNn]
knife diff PATTERNS
knife download PATTERNS
knife edit [PATTERN1 ... PATTERNn]
knife list [-dfR1p] [PATTERN1 ... PATTERNn]
knife show [PATTERN1 ... PATTERNn]
knife upload PATTERNS
knife xargs [COMMAND]

** RAW COMMANDS **
knife raw REQUEST_PATH

** RECIPE COMMANDS **
knife recipe list [PATTERN]

** REHASH COMMANDS **
knife rehash

** ROLE COMMANDS **
knife role bulk delete REGEX (options)
knife role create ROLE (options)
knife role delete ROLE (options)
knife role edit ROLE (options)
knife role env_run_list add [ROLE] [ENVIRONMENT] [ENTRY[,ENTRY]] (options)
knife role env_run_list clear [ROLE] [ENVIRONMENT]
knife role env_run_list remove [ROLE] [ENVIRONMENT] [ENTRIES]
knife role env_run_list replace [ROLE] [ENVIRONMENT] [OLD_ENTRY] [NEW_ENTRY]
knife role env_run_list set [ROLE] [ENVIRONMENT] [ENTRIES]
knife role from file FILE [FILE..] (options)
knife role list (options)
knife role run_list add [ROLE] [ENTRY[,ENTRY]] (options)
knife role run_list clear [ROLE]
knife role run_list remove [ROLE] [ENTRY]
knife role run_list replace [ROLE] [OLD_ENTRY] [NEW_ENTRY]
knife role run_list set [ROLE] [ENTRIES]
knife role show ROLE (options)

** SEARCH COMMANDS **
knife search INDEX QUERY (options)

** SERVE COMMANDS **
knife serve (options)

** SPORK COMMANDS **
knife spork bump COOKBOOK [major|minor|patch|manual]
knife spork check COOKBOOK (options)
knife spork data bag create BAG [ITEM] (options)
knife spork data bag delete BAG [ITEM] (options)
knife spork data bag edit BAG ITEM (options)
knife spork data bag from file BAG FILE|FOLDER [FILE|FOLDER..] (options)
knife spork delete [COOKBOOKS...] (options)
knife spork environment check ENVIRONMENT (options)
knife spork environment create ENVIRONMENT (options)
knife spork environment delete ENVIRONMENT (options)
knife spork environment edit ENVIRONMENT (options)
knife spork environment from file FILENAME (options)
knife spork info
knife spork node create NODE (options)
knife spork node delete NODE (options)
knife spork node edit NODE (options)
knife spork node from file FILE (options)
knife spork node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife spork node run_list add [NODE] [ENTRY[,ENTRY]] (options)
knife spork node run_list set NODE ENTRIES (options)
knife spork omni COOKBOOK (options)
knife spork promote ENVIRONMENT COOKBOOK (options)
knife spork role create ROLE (options)
knife spork role delete ROLENAME (options)
knife spork role edit ROLENAME (options)
knife spork role from file FILENAME (options)
knife spork upload [COOKBOOKS...] (options)

** SSH COMMANDS **
knife ssh QUERY COMMAND (options)

** SSL COMMANDS **
knife ssl check [URL] (options)
knife ssl fetch [URL] (options)

** STATUS COMMANDS **
knife status QUERY (options)

** SUPERMARKET COMMANDS **
knife supermarket download COOKBOOK [VERSION] (options)
knife supermarket install COOKBOOK [VERSION] (options)
knife supermarket list (options)
knife supermarket search QUERY (options)
knife supermarket share COOKBOOK [CATEGORY] (options)
knife supermarket show COOKBOOK [VERSION] (options)
knife supermarket unshare COOKBOOK (options)

** TAG COMMANDS **
knife tag create NODE TAG ...
knife tag delete NODE TAG ...
knife tag list NODE

** USER COMMANDS **
knife user create USERNAME DISPLAY_NAME FIRST_NAME LAST_NAME EMAIL PASSWORD (options)
knife user delete USER (options)
knife user edit USER (options)
knife user key create USER (options)
knife user key delete USER KEYNAME (options)
knife user key edit USER KEYNAME (options)
knife user key list USER (options)
knife user key show USER KEYNAME (options)
knife user list (options)
knife user reregister USER (options)
knife user show USER (options)

** VAULT COMMANDS **
knife vault create VAULT ITEM VALUES (options)
knife vault decrypt VAULT ITEM [VALUES] (options)
knife vault delete VAULT ITEM (options)
knife vault download VAULT ITEM PATH (options)
knife vault edit VAULT ITEM (options)
knife vault isvault VAULT ITEM (options)
knife vault itemtype VAULT ITEM (options)
knife vault list (options)
knife vault refresh VAULT ITEM
knife vault remove VAULT ITEM VALUES (options)
knife vault rotate all keys
knife vault rotate keys VAULT ITEM (options)
knife vault show VAULT [ITEM] [VALUES] (options)
knife vault update VAULT ITEM VALUES (options)

** WINDOWS COMMANDS **
knife windows cert generate FILE_PATH (options)
knife windows cert install CERT [CERT] (options)
knife bootstrap windows winrm FQDN (options)
knife bootstrap windows ssh FQDN (options)
knife winrm QUERY COMMAND (options)
knife wsman test QUERY (options)
knife windows listener create (options)

** WINRM COMMANDS **
knife winrm QUERY COMMAND (options)

** WSMAN COMMANDS **
knife wsman test QUERY (options)

[root@ip-172-31-11-113 chef-repo]# ls
[root@ip-172-31-11-113 chef-repo]# knife cookbook create httpd
WARN: This command is being deprecated in favor of `chef generate cookbook` and will soon return an error.
Please use `chef generate cookbook` instead of this command.
 at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/knife.rb:443:in `block in run_with_pretty_exceptions'
** Creating cookbook httpd in /root/chef-repo/cookbooks
** Creating README for cookbook: httpd
** Creating CHANGELOG for cookbook: httpd
** Creating metadata for cookbook: httpd
[root@ip-172-31-11-113 chef-repo]# ls
cookbooks
[root@ip-172-31-11-113 chef-repo]# cd cookbooks/
[root@ip-172-31-11-113 cookbooks]# ls
httpd
[root@ip-172-31-11-113 cookbooks]# cd httpd/
[root@ip-172-31-11-113 httpd]# cd recipes/
[root@ip-172-31-11-113 recipes]# vi default.rb
[root@ip-172-31-11-113 recipes]# cd ..
[root@ip-172-31-11-113 httpd]# cd ..
[root@ip-172-31-11-113 cookbooks]# knife bootstrap 35.154.67.189 -x ec2-user -i ./Chef.pem -N node1 --sudo
Creating new client for node1
Creating new node for node1
Connecting to 35.154.67.189
Failed to authenticate ec2-user - trying password auth
[root@ip-172-31-11-113 cookbooks]# cd ..
[root@ip-172-31-11-113 chef-repo]# cd .chef
[root@ip-172-31-11-113 .chef]# pwd
/root/chef-repo/.chef
[root@ip-172-31-11-113 .chef]# cd ..
[root@ip-172-31-11-113 chef-repo]# cd cookbooks/
[root@ip-172-31-11-113 cookbooks]# knife bootstrap 35.154.67.189 -x ec2-user -i /root/chef-repo/.chef/Chef.pem -N node1 --sudo
Node node1 exists, overwrite it? (Y/N) y
Client node1 exists, overwrite it? (Y/N) y
Creating new client for node1
Creating new node for node1
Connecting to 35.154.67.189
35.154.67.189 -----> Installing Chef Omnibus (-v 12)
35.154.67.189 downloading https://omnitruck-direct.chef.io/chef/install.sh
35.154.67.189   to file /tmp/install.sh.2742/install.sh
35.154.67.189 trying wget...
35.154.67.189 el 6 x86_64
35.154.67.189 Getting information for chef stable 12 for el...
35.154.67.189 downloading https://omnitruck-direct.chef.io/stable/chef/metadata?v=12&p=el&pv=6&m=x86_64
35.154.67.189   to file /tmp/install.sh.2747/metadata.txt
35.154.67.189 trying wget...
35.154.67.189 sha1      06fb16af659a456bab75f1a79733ca7bbd29edf3
35.154.67.189 sha256    1a0a1e830f95e21bad222b1984cd32e2e76cd856aaf194be27be4b0ad607d1c1
35.154.67.189 url       https://packages.chef.io/files/stable/chef/12.20.3/el/6/chef-12.20.3-1.el6.x86_64.rpm
35.154.67.189 version   12.20.3
35.154.67.189 downloaded metadata file looks valid...
35.154.67.189 downloading https://packages.chef.io/files/stable/chef/12.20.3/el/6/chef-12.20.3-1.el6.x86_64.rpm
35.154.67.189   to file /tmp/install.sh.2747/chef-12.20.3-1.el6.x86_64.rpm
35.154.67.189 trying wget...
35.154.67.189 Comparing checksum with sha256sum...
35.154.67.189 Installing chef 12
35.154.67.189 installing with rpm...
35.154.67.189 warning: /tmp/install.sh.2747/chef-12.20.3-1.el6.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
35.154.67.189 Preparing...                          ################################# [100%]
35.154.67.189 Updating / installing...
35.154.67.189    1:chef-12.20.3-1.el6               ################################# [100%]
35.154.67.189 Thank you for installing Chef!
35.154.67.189 Starting the first Chef Client run...
35.154.67.189 [2017-05-24T07:22:36+00:00] INFO: Forking chef instance to converge...
35.154.67.189 Starting Chef Client, version 12.20.3
35.154.67.189 [2017-05-24T07:22:36+00:00] INFO: *** Chef 12.20.3 ***
35.154.67.189 [2017-05-24T07:22:36+00:00] INFO: Platform: x86_64-linux
35.154.67.189 [2017-05-24T07:22:36+00:00] INFO: Chef-client pid: 2819
35.154.67.189 [2017-05-24T07:22:38+00:00] INFO: Setting the run_list to [] from CLI options
35.154.67.189 [2017-05-24T07:22:38+00:00] INFO: Run List is []
35.154.67.189 [2017-05-24T07:22:38+00:00] INFO: Run List expands to []
35.154.67.189 [2017-05-24T07:22:38+00:00] INFO: Starting Chef Run for node1
35.154.67.189 [2017-05-24T07:22:38+00:00] INFO: Running start handlers
35.154.67.189 [2017-05-24T07:22:38+00:00] INFO: Start handlers complete.
35.154.67.189 [2017-05-24T07:22:40+00:00] INFO: HTTP Request Returned 404 Not Found:
35.154.67.189 [2017-05-24T07:22:40+00:00] INFO: Error while reporting run start to Data Collector. URL: https://api.chef.io/organizations/chefp123/data-collector Exception: 404 -- 404 "Not Found"  (This is normal if you do not have Chef Automate)
35.154.67.189 resolving cookbooks for run list: []
35.154.67.189 [2017-05-24T07:22:41+00:00] INFO: Loading cookbooks []
35.154.67.189 Synchronizing Cookbooks:
35.154.67.189 Installing Cookbook Gems:
35.154.67.189 Compiling Cookbooks...
35.154.67.189 [2017-05-24T07:22:41+00:00] WARN: Node node1 has an empty run list.
35.154.67.189 [2017-05-24T07:22:41+00:00] INFO: HTTP Request Returned 404 Not Found:
35.154.67.189 Converging 0 resources
35.154.67.189 [2017-05-24T07:22:43+00:00] INFO: Chef Run complete in 4.481257657 seconds
35.154.67.189
35.154.67.189 Running handlers:
35.154.67.189 [2017-05-24T07:22:43+00:00] INFO: Running report handlers
35.154.67.189 Running handlers complete
35.154.67.189 [2017-05-24T07:22:43+00:00] INFO: Report handlers complete
35.154.67.189 Chef Client finished, 0/0 resources updated in 07 seconds
35.154.67.189 [2017-05-24T07:22:43+00:00] INFO: Sending resource update report (run-id: 492b9ed7-a3e8-4f48-9ee8-e9a2470007aa)
[root@ip-172-31-11-113 cookbooks]# knife cookbook upload httpd
Uploading httpd        [0.1.0]
Uploaded 1 cookbook.
[root@ip-172-31-11-113 cookbooks]# knife node show
USAGE: knife node show NODE (options)
    -a ATTR1 [--attribute ATTR2] ,   Show one or more attributes
        --attribute
    -s, --server-url URL             Chef Server URL
        --chef-zero-host HOST        Host to start chef-zero on
        --chef-zero-port PORT        Port (or port range) to start chef-zero on.  Port ranges like 1000,1010 or 8889-9999 will try all given ports until one works.
    -k, --key KEY                    API Client Key
        --[no-]color                 Use colored output, defaults to enabled
    -c, --config CONFIG              The configuration file to use
        --config-option OPTION=VALUE Override a single configuration option
        --defaults                   Accept default values for all questions
    -d, --disable-editing            Do not open EDITOR, just accept the data as is
    -e, --editor EDITOR              Set the editor to use for interactive commands
    -E, --environment                Show only the Chef environment
    -S, --field-separator SEPARATOR  Character separator used to delineate nesting in --attribute filters (default ".")
        --[no-]fips                  Enable fips mode
    -F, --format FORMAT              Which format to use for output
        --[no-]listen                Whether a local mode (-z) server binds to a port
    -z, --local-mode                 Point knife commands at local repository instead of server
    -l, --long                       Include all attributes in the output
    -m, --medium                     Include normal attributes in the output
    -u, --user USER                  API Client Username
        --print-after                Show the data after a destructive operation
    -r, --run-list                   Show only the run list
    -V, --verbose                    More verbose output. Use twice for max verbosity
    -v, --version                    Show chef version
    -y, --yes                        Say yes to all prompts for confirmation
    -h, --help                       Show this message
FATAL: You must specify a node name
[root@ip-172-31-11-113 cookbooks]# knife node show node 1
ERROR: The object you are looking for could not be found
Response: node 'node' not found
[root@ip-172-31-11-113 cookbooks]# knife node show [node 1]
ERROR: URI::InvalidURIError: bad URI(is not URI?): https://api.chef.io/organizations/chefp123/nodes/[node
[root@ip-172-31-11-113 cookbooks]# knife node show node1
Node Name:   node1
Environment: _default
FQDN:        ip-172-31-14-229.ap-south-1.compute.internal
IP:          35.154.67.189
Run List:
Roles:
Recipes:
Platform:    amazon 2017.03
Tags:
[root@ip-172-31-11-113 cookbooks]# knife node run_list set [node1]"recipe[httpd]"
FATAL: You must supply both a node name and a run list.
USAGE: knife node run_list set NODE ENTRIES (options)
    -s, --server-url URL             Chef Server URL
        --chef-zero-host HOST        Host to start chef-zero on
        --chef-zero-port PORT        Port (or port range) to start chef-zero on.  Port ranges like 1000,1010 or 8889-9999 will try all given ports until one works.
    -k, --key KEY                    API Client Key
        --[no-]color                 Use colored output, defaults to enabled
    -c, --config CONFIG              The configuration file to use
        --config-option OPTION=VALUE Override a single configuration option
        --defaults                   Accept default values for all questions
    -d, --disable-editing            Do not open EDITOR, just accept the data as is
    -e, --editor EDITOR              Set the editor to use for interactive commands
    -E, --environment ENVIRONMENT    Set the Chef environment (except for in searches, where this will be flagrantly ignored)
        --[no-]fips                  Enable fips mode
    -F, --format FORMAT              Which format to use for output
        --[no-]listen                Whether a local mode (-z) server binds to a port
    -z, --local-mode                 Point knife commands at local repository instead of server
    -u, --user USER                  API Client Username
        --print-after                Show the data after a destructive operation
    -V, --verbose                    More verbose output. Use twice for max verbosity
    -v, --version                    Show chef version
    -y, --yes                        Say yes to all prompts for confirmation
    -h, --help                       Show this message
[root@ip-172-31-11-113 cookbooks]# knife node run_list set [node1]''recipe[httpd]''
FATAL: You must supply both a node name and a run list.
USAGE: knife node run_list set NODE ENTRIES (options)
    -s, --server-url URL             Chef Server URL
        --chef-zero-host HOST        Host to start chef-zero on
        --chef-zero-port PORT        Port (or port range) to start chef-zero on.  Port ranges like 1000,1010 or 8889-9999 will try all given ports until one works.
    -k, --key KEY                    API Client Key
        --[no-]color                 Use colored output, defaults to enabled
    -c, --config CONFIG              The configuration file to use
        --config-option OPTION=VALUE Override a single configuration option
        --defaults                   Accept default values for all questions
    -d, --disable-editing            Do not open EDITOR, just accept the data as is
    -e, --editor EDITOR              Set the editor to use for interactive commands
    -E, --environment ENVIRONMENT    Set the Chef environment (except for in searches, where this will be flagrantly ignored)
        --[no-]fips                  Enable fips mode
    -F, --format FORMAT              Which format to use for output
        --[no-]listen                Whether a local mode (-z) server binds to a port
    -z, --local-mode                 Point knife commands at local repository instead of server
    -u, --user USER                  API Client Username
        --print-after                Show the data after a destructive operation
    -V, --verbose                    More verbose output. Use twice for max verbosity
    -v, --version                    Show chef version
    -y, --yes                        Say yes to all prompts for confirmation
    -h, --help                       Show this message
[root@ip-172-31-11-113 cookbooks]# knife node run_list set node1 ''recipe[httpd]''
node1:
  run_list: recipe[httpd]
[root@ip-172-31-11-113 cookbooks]# ssh -i ec2-user@35.154.67.189
Warning: Identity file ec2-user@35.154.67.189 not accessible: No such file or directory.
usage: ssh [-1246AaCfgKkMNnqsTtVvXxYy] [-b bind_address] [-c cipher_spec]
           [-D [bind_address:]port] [-E log_file] [-e escape_char]
           [-F configfile] [-I pkcs11] [-i identity_file]
           [-L [bind_address:]port:host:hostport] [-l login_name] [-m mac_spec]
           [-O ctl_cmd] [-o option] [-p port]
           [-Q cipher | cipher-auth | mac | kex | key]
           [-R [bind_address:]port:host:hostport] [-S ctl_path] [-W host:port]
           [-w local_tun[:remote_tun]] [user@]hostname [command]
[root@ip-172-31-11-113 cookbooks]# knife node show node1
Node Name:   node1
Environment: _default
FQDN:        ip-172-31-14-229.ap-south-1.compute.internal
IP:          35.154.67.189
Run List:    recipe[httpd]
Roles:
Recipes:
Platform:    amazon 2017.03
Tags:
[root@ip-172-31-11-113 cookbooks]# history
    1  wget https://packages.chef.io/files/stable/chefdk/1.4.3/el/7/chefdk-1.4.3-1.el7.x86_64.rpm
    2  ls
    3  rpm -ivh chefdk-1.4.3-1.el7.x86_64.rpm
    4  cv
    5  cd ..
    6  cd
    7  mkdir chef-repo
    8  cd chef-repo/
    9  mkdir .chef
   10  ls
   11  mv Chef.pem .chef
   12  mv praveeng.pem .chef
   13  mv knife.rb .chef/
   14  mv chefp123-validator.pem .chef
   15  knife generate cookbook httpd
   16  ls
   17  knife generate cookbook appache
   18  ls
   19  knife cookbook create httpd
   20  ls
   21  cd cookbooks/
   22  ls
   23  cd httpd/
   24  cd recipes/
   25  vi default.rb
   26  cd ..
   27  cd ..
   28  knife bootstrap 35.154.67.189 -x ec2-user -i ./Chef.pem -N node1 --sudo
   29  cd ..
   30  cd .chef
   31  pwd
   32  cd ..
   33  cd cookbooks/
   34  knife bootstrap 35.154.67.189 -x ec2-user -i /root/chef-repo/.chef/Chef.pem -N node1 --sudo
   35  knife cookbook upload httpd
   36  knife node show
   37  knife node show node 1
   38  knife node show [node 1]
   39  knife node show node1
   40  knife node run_list set [node1]"recipe[httpd]"
   41  knife node run_list set [node1]''recipe[httpd]''
   42  knife node run_list set node1 ''recipe[httpd]''
   43  ssh -i ec2-user@35.154.67.189
   44  knife node show node1
   45  history
[root@ip-172-31-11-113 cookbooks]#
